# /etc/rc.d/rc.inet1.conf
#
# This file contains the configuration settings for network interfaces.
# If USE_DHCP[interface] is set to "yes", this overrides any other settings.
# If you don't have an interface, leave the settings null ("").

# You can configure network interfaces other than eth0,eth1... by setting
# IFNAME[interface] to the interface's name. If IFNAME[interface] is unset
# or empty, it is assumed you're configuring eth<interface>.
# =============================================================================

# change this to "yes" for debugging output to stdout. Unfortunately,
# /sbin/hotplug seems to disable stdout so you'll only see debugging output
# when rc.inet1 is called directly.
DEBUG_ETH_UP=no
DHCP_DEBUG=no

# bergware - use associative format for multi-dimensional arrays
declare -A VLANID USE_DHCP IPADDR NETMASK GATEWAY METRIC USE_DHCP6 IPADDR6 NETMASK6 GATEWAY6 METRIC6 PRIVACY6 DESCRIPTION PROTOCOL

# limetech - read settings from config file
cfg=/boot/config/network.cfg
if [[ -s $cfg ]]; then
  source <(/usr/bin/fromdos < $cfg)
else
  IPADDR=
  NETMASK=
  GATEWAY=
  USE_DHCP=yes
  DHCP_KEEPRESOLV=no
  BONDING=yes
  BRIDGING=yes
fi

# init DHCP_KEEPRESOLV appropriately if not defined in network.cfg
if [[ $USE_DHCP == yes ]]; then
  DHCP_HOSTNAME=$(hostname)
  [[ -z $DHCP_KEEPRESOLV ]] && DHCP_KEEPRESOLV=no
else
  DHCP_KEEPRESOLV=yes
fi
if [[ $USE_DHCP6 == yes ]]; then
  DHCP_HOSTNAME=$(hostname)
  [[ -z $DHCP6_KEEPRESOLV ]] && DHCP6_KEEPRESOLV=no
else
  DHCP6_KEEPRESOLV=yes
fi

# default resolv.conf file
RESOLV=/etc/resolv.conf
echo -n >$RESOLV
echo -n >$RESOLV.head
echo -n >$RESOLV.tail

if [[ $DHCP_KEEPRESOLV == yes ]]; then
  echo "# Generated by rc.inet1" >>$RESOLV
  [[ -n $DNS_SERVER1 ]] && echo "nameserver $DNS_SERVER1" >>$RESOLV
  [[ -n $DNS_SERVER2 ]] && echo "nameserver $DNS_SERVER2" >>$RESOLV
  [[ -n $DNS_SERVER3 ]] && echo "nameserver $DNS_SERVER3" >>$RESOLV
  [[ -n $DNS_SERVER4 ]] && echo "nameserver $DNS_SERVER4" >>$RESOLV
  [[ $DHCP6_KEEPRESOLV == no ]] && cp -f $RESOLV $RESOLV.head
fi
if [[ $DHCP6_KEEPRESOLV == yes ]]; then
  [[ $DHCP_KEEPRESOLV == no ]] && echo "# Generated by rc.inet1" >>$RESOLV
  [[ -n $DNS6_SERVER1 ]] && echo "nameserver $DNS6_SERVER1" >>$RESOLV
  [[ -n $DNS6_SERVER2 ]] && echo "nameserver $DNS6_SERVER2" >>$RESOLV
  [[ -n $DNS6_SERVER3 ]] && echo "nameserver $DNS6_SERVER3" >>$RESOLV
  [[ -n $DNS6_SERVER4 ]] && echo "nameserver $DNS6_SERVER4" >>$RESOLV
  [[ $DHCP_KEEPRESOLV == no ]] && cp -f $RESOLV $RESOLV.tail
fi

if [[ -n $SYSNICS ]]; then
  # bergware - set number of interfaces as present in the system
  MAXNICS=$SYSNICS
else
  # bergware - legacy configuration of first interface
  MAXNICS=1
  if [[ $BONDING == yes && $BRIDGING == yes ]]; then
    # both bonding and bridging selected
    BONDNAME=bond0
    BONDNICS=${BONDNICS:-eth0 eth1 eth2 eth3}
    BONDING_MODE=${BONDING_MODE:-1}
    BONDING_MIIMON=${BONDING_MIIMON:-100}
    BRNAME=br0
    BRNICS=bond0
    BRSTP=no
    BRFD=0
    IFNAME=$BRNAME
  elif [[ $BONDING == yes ]]; then
    # bonding selected
    BONDNAME=bond0
    BONDNICS=${BONDNICS:-eth0 eth1 eth2 eth3}
    BONDING_MODE=${BONDING_MODE:-1}
    BONDING_MIIMON=${BONDING_MIIMON:-100}
    IFNAME=$BONDNAME
  elif [[ $BRIDGING == yes ]]; then
    # bridging selected
    BRNAME=br0
    BRNICS=eth0
    BRSTP=no
    BRFD=0
    IFNAME=$BRNAME
  else
    # normal interface
    IFNAME=eth0
  fi
fi
